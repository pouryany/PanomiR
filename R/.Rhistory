func_list
for(func in func_list){
method <- c("sumz","AggInv")
top.clusters <- pathway.clusters[[func]]
enriches0    <- readRDS(paste0(data.dir,"LIHCGenesLIHCMirsENRICHMENT_Tarbase.RDS"))
print(paste0("performing: ", func))
output2 <- miRNAPrioritization2(enriches0,
top.clusters,
method,
out.dir=paste0(out.dir,func,
'_Prioritization_',
"Tarbase",
'/'),
data.dir=data.dir,
samp.rate=1000,
prefix=paste0('x2_LIHCGene_',"Tarbase"),
save.jack.knife=F,
save.csv=T,
num.cores = 8,
top.clust=3,
run.jack.knife = F)
}
library(readr)
x2_LIHCGene_Tarbase1000_samples_clustNo_1 <- read_csv("~/Desktop/Research/PanomiR/PanomiR_R/test_cases2/LIHC/Output/cluster_edge_betweenness_Prioritization_Tarbase/x2_LIHCGene_Tarbase1000_samples_clustNo_1.csv")
View(x2_LIHCGene_Tarbase1000_samples_clustNo_1)
library(readr)
x2_LIHCGene_Tarbase1000_samples_clustNo_1 <- read_csv("~/Desktop/Research/PanomiR/PanomiR_R/test_cases2/LIHC/Output/cluster_louvain_Prioritization_Tarbase/x2_LIHCGene_Tarbase1000_samples_clustNo_1.csv")
View(x2_LIHCGene_Tarbase1000_samples_clustNo_1)
library(readr)
x2_LIHCGene_Tarbase1000_samples_clustNo_2 <- read_csv("~/Desktop/Research/PanomiR/PanomiR_R/test_cases2/LIHC/Output/cluster_louvain_Prioritization_Tarbase/x2_LIHCGene_Tarbase1000_samples_clustNo_2.csv")
View(x2_LIHCGene_Tarbase1000_samples_clustNo_2)
library(readr)
x2_LIHCGene_Tarbase1000_samples_clustNo_3 <- read_csv("~/Desktop/Research/PanomiR/PanomiR_R/test_cases2/LIHC/Output/cluster_louvain_Prioritization_Tarbase/x2_LIHCGene_Tarbase1000_samples_clustNo_3.csv")
View(x2_LIHCGene_Tarbase1000_samples_clustNo_3)
setwd("~/Desktop/O2_ROSMAP_AD")
rm(list = ls())
library(dplyr)
miR_tab <- read.csv("RUSH_data_request/only_mirs.csv")
clinical.Tot           <- readRDS("Data/preprocessed/clinicalTotal.RDS")
clinical.Tot$Diagnosis <- as.character(clinical.Tot$Diagnosis)
miR_tab <- miR_tab[miR_tab$projid.x %in% clinical.Tot$projid,]
rownames(miR_tab) <- NULL
miR_tab <- column_to_rownames(miR_tab,"X")
# Super small set
resil_tab <- miR_tab %>% dplyr::filter(.,RESIL == "resilient",
ceradsc.x %in% c(1,2),
cogdx.x   %in% c(1),
age_death.x > 80,
RIN    > 7.0)
norm_tab  <- miR_tab %>% dplyr::filter(.,RESIL == "Normal",
cogdx.x ==1,
ceradsc.x %in% c(3,4),
braaksc.x %in% c(0,1,2),
age_death.x > 80,
RIN    > 7.0)
ads_tab   <- miR_tab %>% dplyr::filter(.,RESIL == "ADcontrol",
ceradsc.x == 1,
braaksc.x %in% c(3,4,5,6),
age_death.x > 80,
RIN  > 7.0)
plaque_tab   <- miR_tab %>% dplyr::filter(.,
ceradsc.x %in% c(1,2),
braaksc.x %in% c(0,1,2),
age_death.x > 80,
cogdx.x   %in% c(1,4),
RIN  > 7.0)
temp_cont_tab   <- miR_tab %>% dplyr::filter(.,
ceradsc.x %in% c(3,4),
braaksc.x %in% c(4,5,6),
cogdx.x   %in% c(1,4),
age_death.x > 80,
RIN  > 7.0)
total_tab <- bind_rows(resil_tab,norm_tab,ads_tab,plaque_tab,temp_cont_tab)
nrow(total_tab)
from_rush  <- read.csv("RUSH_data_request/from_rush.csv")
from_rush2 <- readxl::read_xlsx("RUSH_data_request/Hide Samples 08-2021.xlsx")
from_rush2 <- miR_tab[miR_tab$projid.x %in% as.numeric(from_rush2$projid),]
table(from_rush2$RESIL)
from_rush2
from_manolis <- readxl::read_xlsx("~/Downloads/Projids.xlsx")
from_manolis
from_manolis$projid %in% from_rush2$projid.x
from_rush2$projid.x
from_manolis$projid
from_manolis$projid %in% from_rush2$projid.x
miR_tab$projid.x
from_manolis <- from_rush2[from_rush2$projid.x %in% from_manolis$projid,]
View(from_manolis)
from_rush2$projid.x
from_manolis <- readxl::read_xlsx("~/Downloads/Projids.xlsx")
from_manolis
from_manolis  <- readxl::read_xlsx("~/Downloads/Projids.xlsx")
from_manolis
View(from_manolis)
miR_tab[miR_tab$projid.x %in% from_manolis$projid,]
from_manolis3 <- miR_tab[miR_tab$projid.x %in% as.numeric(from_manolis$projid),]
from_manolis3
View(from_manolis3)
table(from_manolis3$RESIL)
setwd("~/Desktop/Research/PanomiR/PanomiR_R/R")
# Compare prioritization results to DE miRNAs. Trying to attribute miRNAs to cluster.
rm(list = ls())
library(dplyr)
library(tibble)
all.res  <- list.files("../test_cases/LIHC/Output/cluster_louvain_Prioritization_Tarbase/",full.names = T)
all.res
# Compare prioritization results to DE miRNAs. Trying to attribute miRNAs to cluster.
rm(list = ls())
library(dplyr)
library(tibble)
all.res  <- list.files("../test_cases2/LIHC/Output/cluster_louvain_Prioritization_Tarbase/",full.names = T)
all.res
all.mirs <- readRDS("../Data/TCGA-LIHC-DEmiRNAs.RDS")
de.mirs  <- all.mirs[all.mirs$adj.P.Val<0.01,]
de.mirs <- rownames_to_column(de.mirs)
de.vec  <- de.mirs$rowname
de.vec  <- paste(de.vec, collapse = "|")
all.mirs <- rownames_to_column(all.mirs)
all.vec  <- all.mirs$rowname
all.vec  <- paste(all.vec, collapse = "|")
de.targets <- list()
n.targets  <- list()
for(res in all.res){
res.tab0 <- read.csv(res,row.names = "X")
res.tab <- res.tab0[res.tab0$AggInv_fdr<0.001,]
all.ids  <- grep(all.vec,res.tab0$x,value = T)
des.ids  <- grep(de.vec,res.tab0$x,value = T)
sel.mirs <- grep(de.vec,res.tab$x,value = T)
name.tag  <- unlist(strsplit(res,"/"))
name.tag  <- tail(name.tag,1)
name.tag  <- gsub(".csv","",name.tag)
clust_tag <- tail(unlist(strsplit(name.tag,"_")),1)
if(length(sel.mirs)>0)
de.targets[[name.tag]] <- data.frame(cluster = clust_tag ,
miRNA = sort(sel.mirs))
n.targets[[name.tag]]  <- nrow(res.tab)
}
de.targets1 <- Reduce(rbind, de.targets)
de.targets1
library(dplyr)
library(dplyr)
library(dplyr)
library(dplyr)
enriches <- readRDS("../test_cases/LIHC/Data/LIHCGenesLIHCMirsENRICHMENT_Tarbase.RDS")
enriches <- readRDS("../test_cases2/LIHC/Data/LIHCGenesLIHCMirsENRICHMENT_Tarbase.RDS")
enriches <- unique(enriches[,c("x","mirset_Size")])
enriches0 <- read.csv("../test_cases2/LIHC/Output/cluster_fast_greedy_Prioritization_Tarbase/x2_LIHCGene_Tarbase1000_samples_clustNo_3.csv")
enriches0
enriches2  <- left_join(enriches0,enriches)
plot(log(enriches2$mirset_Size),enriches2$cluster_hits,)
cor1 <- cor.test(log2(enriches3$mirset_Size),-log2(enriches3$AggInv_pval),method = "spearman")
cor2 <- cor.test(log2(enriches2$mirset_Size),enriches2$cluster_hits,method = "spearman")
library(ggplot2)
library(cowplot)
enriches3 <- enriches2#[enriches2$AggInv_fdr <1,]
cor1      <- cor.test(log2(enriches3$mirset_Size),
-log2(enriches3$AggInv_pval),
method = "spearman")
cor1
enriches0 <- read.csv("../test_cases2/LIHC/Output/cluster_louvain_Prioritization_Tarbase/x2_LIHCGene_Tarbase1000_samples_clustNo_3.csv")
enriches2  <- left_join(enriches0,enriches)
plot(log(enriches2$mirset_Size),enriches2$cluster_hits,)
library(ggplot2)
library(cowplot)
enriches3 <- enriches2#[enriches2$AggInv_fdr <1,]
cor1      <- cor.test(log2(enriches3$mirset_Size),
-log2(enriches3$AggInv_pval),
method = "spearman")
cor1
ggplot(enriches3,aes(log2(mirset_Size),-log2(AggInv_pval))) +
geom_point(alpha=0.8) +
theme_cowplot() +
xlab("log(Number of miRNA target)")+
ylab(paste0( "- log(caraway p-value)")) +
labs(title = paste0("CARAWAY Pathway Size vs P-value"))+
theme(plot.title = element_text(size=22),
axis.text=element_text(size=14),
axis.text.x = element_text(face = "bold",size = 14, angle = 0,
vjust = 1,hjust = 1),
axis.text.y =  element_text(size = 20),
axis.title=element_text(size=14,face="bold"),
strip.text = element_text(size = 14,angle = 90),
legend.position = "none") +
annotate("text", x = 10, y = 100,
label = paste0("italic(Correlation) == ", signif(cor1$estimate,2) ),
parse = T,
size  = 7)
enriches3 <- enriches2
cor2      <- cor.test(log2(enriches3$mirset_Size),
(enriches3$cluster_hits),
method = "spearman")
cor2
enriches3
nrow(enriches3)
enriches0 <- read.csv("../test_cases2/LIHC/Output/cluster_louvain_Prioritization_Tarbase/x2_LIHCGene_Tarbase1000_samples_clustNo_1.csv")
enriches2  <- left_join(enriches0,enriches)
plot(log(enriches2$mirset_Size),enriches2$cluster_hits,)
library(ggplot2)
library(cowplot)
enriches3 <- enriches2#[enriches2$AggInv_fdr <1,]
cor1      <- cor.test(log2(enriches3$mirset_Size),
-log2(enriches3$AggInv_pval),
method = "spearman")
ggplot(enriches3,aes(log2(mirset_Size),-log2(AggInv_pval))) +
geom_point(alpha=0.8) +
theme_cowplot() +
xlab("log(Number of miRNA target)")+
ylab(paste0( "- log(caraway p-value)")) +
labs(title = paste0("CARAWAY Pathway Size vs P-value"))+
theme(plot.title = element_text(size=22),
axis.text=element_text(size=14),
axis.text.x = element_text(face = "bold",size = 14, angle = 0,
vjust = 1,hjust = 1),
axis.text.y =  element_text(size = 20),
axis.title=element_text(size=14,face="bold"),
strip.text = element_text(size = 14,angle = 90),
legend.position = "none") +
annotate("text", x = 10, y = 100,
label = paste0("italic(Correlation) == ", signif(cor1$estimate,2) ),
parse = T,
size  = 7)
enriches3 <- enriches2
cor2      <- cor.test(log2(enriches3$mirset_Size),
(enriches3$cluster_hits),
method = "spearman")
cor2
cor2
ggplot(enriches3,aes(log2(mirset_Size),(cluster_hits))) +
geom_point(alpha=0.6) +
theme_cowplot() +
xlab("log(Number of miRNA target)")+
ylab(paste0( "Number of enriched Pathways")) +
labs(title = paste0("Enrichment Pathway Size vs P-value"))+
theme(plot.title = element_text(size=22),
axis.text=element_text(size=14),
axis.text.x = element_text(face = "bold",size = 14, angle = 0,
vjust = 1,hjust = 1),
axis.text.y =  element_text(size = 20),
axis.title=element_text(size=14,face="bold"),
strip.text = element_text(size = 14,angle = 90),
legend.position = "none")+
annotate("text", x = 5, y = 40,
label = paste0("italic(Correlation) == ", signif(cor2$estimate,2) ),
parse = T,
size  = 7)
enriches3
ggplot(enriches3,aes(log2(mirset_Size),-log2(sumz_pval))) +
geom_point(alpha=0.6) +
theme_cowplot() +
xlab("log(Number of miRNA target)")+
ylab(paste0( "Number of enriched Pathways")) +
labs(title = paste0("Enrichment Pathway Size vs P-value"))+
theme(plot.title = element_text(size=22),
axis.text=element_text(size=14),
axis.text.x = element_text(face = "bold",size = 14, angle = 0,
vjust = 1,hjust = 1),
axis.text.y =  element_text(size = 20),
axis.title=element_text(size=14,face="bold"),
strip.text = element_text(size = 14,angle = 90),
legend.position = "none")+
annotate("text", x = 5, y = 40,
label = paste0("italic(Correlation) == ", signif(cor2$estimate,2) ),
parse = T,
size  = 7)
ggplot(enriches3,aes(log10(mirset_Size),-log2(sumz_pval))) +
geom_point(alpha=0.6) +
theme_cowplot() +
xlab("log(Number of miRNA target)")+
ylab(paste0( "Number of enriched Pathways")) +
labs(title = paste0("Enrichment Pathway Size vs P-value"))+
theme(plot.title = element_text(size=22),
axis.text=element_text(size=14),
axis.text.x = element_text(face = "bold",size = 14, angle = 0,
vjust = 1,hjust = 1),
axis.text.y =  element_text(size = 20),
axis.title=element_text(size=14,face="bold"),
strip.text = element_text(size = 14,angle = 90),
legend.position = "none")+
annotate("text", x = 5, y = 40,
label = paste0("italic(Correlation) == ", signif(cor2$estimate,2) ),
parse = T,
size  = 7)
ggplot(enriches3,aes(log2(mirset_Size),-log10(sumz_pval))) +
geom_point(alpha=0.6) +
theme_cowplot() +
xlab("log(Number of miRNA target)")+
ylab(paste0( "Number of enriched Pathways")) +
labs(title = paste0("Enrichment Pathway Size vs P-value"))+
theme(plot.title = element_text(size=22),
axis.text=element_text(size=14),
axis.text.x = element_text(face = "bold",size = 14, angle = 0,
vjust = 1,hjust = 1),
axis.text.y =  element_text(size = 20),
axis.title=element_text(size=14,face="bold"),
strip.text = element_text(size = 14,angle = 90),
legend.position = "none")+
annotate("text", x = 5, y = 40,
label = paste0("italic(Correlation) == ", signif(cor2$estimate,2) ),
parse = T,
size  = 7)
rm(list = ls())
source('01-DifferentialPathwayAnalysis.R')
source('02-MappingPathwaysClusters.R')
source('03-miRNAPathwayEnrichment.R')
source('04-miRNAPrioritization.R')
source('05-miRNAPathwayCorrelation.R')
library(ggplot2)
pathways     <- readRDS('../Data/preprocessed/MSigDBPathGeneTab.RDS')
genes.counts <- readRDS('../Data/LIHC_gene.RDS')
covariates <- read.csv('../Data/TCGA-LIHC-COV.csv', row.names = 1)
condition = 'shortLetterCode'
out.dir   = '../test_cases2/LIHC/Output/'
data.dir  = '../test_cases2/LIHC/Data/'
if(!dir.exists(out.dir))
dir.create(out.dir,recursive = T)
if(!dir.exists(data.dir))
dir.create(data.dir,recursive = T)
de.paths0 <- readRDS(paste0(data.dir,"Pathways_object.RDS"))
de.paths  <- de.paths0$DEP
pcxn <- readRDS('../Data/GeneSets/improved_PCxN_MSigDB.RDS')
pathway.clusters <- MappingPathwaysClusters(pcxn = pcxn,
de.paths = de.paths[1:300,],
out.dir=out.dir,
subplot = F,
prefix='LIHC_x2_all_top200_',
cor.thresh = 0.1)
func_list <- c("cluster_edge_betweenness",
"cluster_infomap",
"cluster_fast_greedy",
"cluster_louvain")
pathway.clusters <- list()
for(func in func_list){
temp.clusters <- MappingPathwaysClusters(pcxn = pcxn,
de.paths = de.paths[1:300,],
out.dir= out.dir,
subplot = F,
top.paths = 200,
prefix= paste0('top200_',func),
cor.thresh = 0.1,
clust.fn = get(func),
save.csv.name = paste0("Pathways_",
func,
".csv"))
temp.clusters$method     <- func
pathway.clusters[[func]] <- temp.clusters
}
Reduce(rbind,pathway.clusters)
mir.sets        <- readRDS('../Data/preprocessed/NORMALIZED_MIRSETS.rds')
#mir.sets        <- readRDS('../../Data/preprocessed/NORMALIZED_MIRSETS_TargetScan01.rds')
mir.sets.list    <- list.files("../Data/preprocessed/",
pattern = "TargetScan",
full.names = T)
pathways.sets   <- readRDS('../Data/GeneSets/MSigDB.RDS')
genes.selection <- rownames(genes.counts)
mirna.counts    <- readRDS('../Data/TCGA-LIHC-miRNAs_residuals.RDS')
# mir.selection   <- rownames(mirna.counts)
mir.selection   <- names(mir.sets)
enriches0 <- readRDS(paste0(data.dir,"LIHCGenesLIHCMirsENRICHMENT_Tarbase.RDS"))
func_list <- c("cluster_edge_betweenness",
"cluster_infomap",
"cluster_fast_greedy",
"cluster_louvain")
for(func in func_list){
method <- c("sumlog","sumz","AggInv")
top.clusters <- pathway.clusters[[func]]
enriches0    <- readRDS(paste0(data.dir,"LIHCGenesLIHCMirsENRICHMENT_Tarbase.RDS"))
print(paste0("performing: ", func))
output2 <- miRNAPrioritization2(enriches0,
top.clusters,
method,
out.dir=paste0(out.dir,func,
'_Prioritization_',
"Tarbase",
'/'),
data.dir=data.dir,
samp.rate=1000,
prefix=paste0('x2_LIHCGene_',"Tarbase"),
save.jack.knife=F,
save.csv=T,
num.cores = 8,
top.clust=3,
run.jack.knife = F)
}
source('01-DifferentialPathwayAnalysis.R')
source('02-MappingPathwaysClusters.R')
source('03-miRNAPathwayEnrichment.R')
source('04-miRNAPrioritization.R')
source('05-miRNAPathwayCorrelation.R')
for(func in func_list){
method <- c("sumlog","sumz","AggInv")
top.clusters <- pathway.clusters[[func]]
enriches0    <- readRDS(paste0(data.dir,"LIHCGenesLIHCMirsENRICHMENT_Tarbase.RDS"))
print(paste0("performing: ", func))
output2 <- miRNAPrioritization2(enriches0,
top.clusters,
method,
out.dir=paste0(out.dir,func,
'_Prioritization_',
"Tarbase",
'/'),
data.dir=data.dir,
samp.rate=1000,
prefix=paste0('x2_LIHCGene_',"Tarbase"),
save.jack.knife=F,
save.csv=T,
num.cores = 8,
top.clust=3,
run.jack.knife = F)
}
for(func in func_list){
method       <- c("sumlog","sumz","AggInv")
top.clusters <- pathway.clusters[[func]]
for (mirs in mir.sets.list){
tag       <- tail(unlist(stringr::str_split(mirs,pattern = "_")),1)
mir.sets  <- readRDS(mirs)
name.tag  <- paste0("LIHCGenesLIHCMirsENRICHMENT_",tag)
tag       <- gsub(".rds","",tag)
enriches0 <- readRDS(paste0(data.dir,name.tag))
print(paste0("performing: ", tag))
output2 <- miRNAPrioritization2(enriches0,
top.clusters,
method,
out.dir=paste0(out.dir,func,
'_Prioritization_',
tag,
'/'),
data.dir=data.dir,
samp.rate=1000,
prefix=paste0('x2_LIHCGene_',tag),
save.jack.knife=F,
save.csv=T,
num.cores = 8,
top.clust=3)
}
}
debug(miRNAPrioritization2)
tag
print(paste0("performing: ", tag))
tag
out.dir
enriches0
enriches0 <- readRDS(paste0(data.dir,name.tag))
enriches0
output2 <- miRNAPrioritization2(enriches0,
top.clusters,
method,
out.dir=paste0(out.dir,func,
'_Prioritization_',
tag,
'/'),
data.dir=data.dir,
samp.rate=1000,
prefix=paste0('x2_LIHCGene_',tag),
save.jack.knife=F,
save.csv=T,
num.cores = 8,
top.clust=3)
for(func in func_list){
method       <- c("sumlog","sumz","AggInv")
top.clusters <- pathway.clusters[[func]]
for (mirs in mir.sets.list){
tag       <- tail(unlist(stringr::str_split(mirs,pattern = "_")),1)
mir.sets  <- readRDS(mirs)
name.tag  <- paste0("LIHCGenesLIHCMirsENRICHMENT_",tag)
tag       <- gsub(".rds","",tag)
enriches0 <- readRDS(paste0(data.dir,name.tag))
print(paste0("performing: ", tag))
output2 <- miRNAPrioritization2(enriches0,
top.clusters,
method,
out.dir=paste0(out.dir,func,
'_Prioritization_',
tag,
'/'),
data.dir=data.dir,
samp.rate=1000,
prefix=paste0('x2_LIHCGene_',tag),
save.jack.knife=F,
save.csv=T,
num.cores = 8,
top.clust=3,
run.jack.knife = F)
}
}
undebug(miRNAPrioritization2)
for(func in func_list){
method       <- c("sumlog","sumz","AggInv")
top.clusters <- pathway.clusters[[func]]
for (mirs in mir.sets.list){
tag       <- tail(unlist(stringr::str_split(mirs,pattern = "_")),1)
mir.sets  <- readRDS(mirs)
name.tag  <- paste0("LIHCGenesLIHCMirsENRICHMENT_",tag)
tag       <- gsub(".rds","",tag)
enriches0 <- readRDS(paste0(data.dir,name.tag))
print(paste0("performing: ", tag))
output2 <- miRNAPrioritization2(enriches0,
top.clusters,
method,
out.dir=paste0(out.dir,func,
'_Prioritization_',
tag,
'/'),
data.dir=data.dir,
samp.rate=1000,
prefix=paste0('x2_LIHCGene_',tag),
save.jack.knife=F,
save.csv=T,
num.cores = 8,
top.clust=3,
run.jack.knife = F)
}
}
